.. _science2:

Bibliothèques scientifiques avancées
####################################

.. contents:: Table des matières
..
    1  Pandas & xarray
    2  Astropy
      2.1  Tour d'horizon
      2.2  Démonstration
    3  Autres librairies scientifiques

Pandas & xarray
===============

Pandas
------

`Pandas <http://pandas.pydata.org/>`_ est une bibliothèque pour la
structuration et analyse avancée de données *hétérogènes*.

.. rubric:: Exemples de visualisation de jeux de données complexes (utilisation
            de pandas et seaborn)

* `Iris Dataset <https://www.kaggle.com/benhamner/python-data-visualizations>`_
* `Gotta Catch ‘Em All <https://elitedatascience.com/python-seaborn-tutorial>`_
  (Pandas & Seaborn)
* `Pokémon Stats
  <https://www.kaggle.com/ndrewgele/visualizing-pok-mon-stats-with-seaborn>`_
  (Pandas & Seaborn)

xarray
------

`xarray <http://xarray.pydata.org/>`_ est une bibliothèque pour la
structuration de données *homogènes* de dimension arbitraire.


Astropy
=======

`Astropy <http://astropy.readthedocs.io/en/stable/>`_ est une
librairie astronomique maintenue par la communauté et visant à fédérer
les efforts jusque là disparates.  Elle offre en outre une interface
unifiée à des `librairies affiliées
<http://www.astropy.org/affiliated/>`_ plus spécifiques.

Tour d'horizon
--------------

- Structures de base:

  - :mod:`astropy.constants`: constantes fondamentales (voir également
    :mod:`scipy.constants`)
  - :mod:`astropy.units`: unités et quantités dimensionnées
  - :mod:`astropy.nddata`: extension des :class:`numpy.ndarray` (incluant
    méta-données, masque, unité, incertitude, etc.)
  - :mod:`astropy.table`: tableaux hétérogènes
  - :mod:`astropy.time`: manipulation du temps et des dates
  - :mod:`astropy.coordinates`: systèmes de coordonnées
  - :mod:`astropy.wcs`: *World Coordinate System*
  - :mod:`astropy.modeling`: modèles et ajustements
  - :mod:`astropy.analytic_functions`: fonctions analytiques

- Entrées/sorties:

  - :mod:`astropy.io.fits`: fichiers FITS
  - :mod:`astropy.io.ascii`: tables ASCII
  - :mod:`astropy.io.votable`: XML VO-tables
  - :mod:`astropy.io.misc`: divers
  - :mod:`astropy.vo`: accès au *Virtual Observatory*

- Calculs astronomiques:

  - :mod:`astropy.cosmology`: calculs cosmologiques
  - :mod:`astropy.convolution`: convolution and filtrage
  - :mod:`astropy.visualization`: visualisation de données
  - :mod:`astropy.stats`: méthodes astro-statistiques

Démonstration
-------------

:ref:`Démonstration Astropy <Cours/astropy.ipynb>` (:download:`astropy.ipynb`)

.. rubric:: Voir également:

* `AstroBetter tutorials
  <http://www.astrobetter.com/blog/2014/07/07/astropy-tutorials-learn-how-to-do-common-astro-tasks-with-astropy-and-python/>`_

.. Note:: n'oubliez pas de citer [Astropy13]_ ou de `mentionner l'utilisation
   <http://www.astropy.org/about.html#acknowledge>`_ d'astropy dans vos
   publications et présentations.

.. [Astropy13] `2013A&A...558A..33A
               <http://adsabs.harvard.edu/abs/2013A%26A...558A..33A>`_


Autres librairies scientifiques
===============================

Python est maintenant très largement utilisé par la communauté
scientifique, et dispose d'innombrables librairies dédiées aux
différents domaines de la physique, chimie, etc.:

- Astronomie: `Kapteyn <http://www.astro.rug.nl/software/kapteyn/>`_,
  `AstroML <http://www.astroml.org/>`_, `HyperSpy
  <http://hyperspy.org/>`_
- Mécanique quantique: `QuTiP <http://qutip.org/>`_
- Électromagnétisme: `EMpy <https://lbolla.github.io/EMpy/>`_
- *PDE solver*: `FiPy <http://www.ctcms.nist.gov/fipy/>`_, `SfePy
  <http://sfepy.org/doc-devel/>`_
- Analyse statistique bayesienne: `PyStan
  <http://mc-stan.org/interfaces/pystan.html>`_
- *Markov Chain Monte-Carlo*: `emcee
  <http://dan.iel.fm/emcee/current/>`_, `PyMC3
  <https://pymc-devs.github.io/pymc3/>`_,
- *Machine Learning*: `mlpy <http://mlpy.sourceforge.net/>`_, `milk
  <https://pythonhosted.org/milk/>`_, `MDP
  <http://mdp-toolkit.sourceforge.net/>`_, et autres `modules d'intelligence
  artificielle
  <https://wiki.python.org/moin/PythonForArtificialIntelligence>`_
- Calcul symbolique: `sympy <http://www.sympy.org/>`_ (voir également
  ce `tutoriel sympy
  <https://mattpap.github.io/scipy-2011-tutorial/html/>`_)
- `PyROOT <https://root.cern.ch/pyroot>`_
- `High Performance Computing in Python
  <https://byumcl.bitbucket.io/bootcamp2013/labs/perfomance.html>`_
- `Etc. <http://www.scipy.org/topical-software.html>`_

.. |fr| image:: ../_static/france_flag_icon.png
   :alt: Fr
.. |en| image:: ../_static/uk_flag_icon.png
   :alt: En
