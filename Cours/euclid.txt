.. _euclid:

Spécificités Euclid
###################

.. contents:: Table des matières
..
    1  Librairies EDEN
    2  Git et GitLab

Le `consortium Euclid <http://www.euclid-ec.org/>`_ a mis en place un
référentiel de développement propre, :abbr:`EDEN (Euclid Development
ENvironment)`, visant à standardiser les formats utilisés, les règles
de codage en vigueur, les outils accessibles aux développeurs, etc.,
dans le cadre du :abbr:`SGS (Science Ground Segment)`.  Ce référentiel
est incarné dans les environnements de production :abbr:`CODEEN
(COllaborative DEvelopment Environment)` et de développement
:abbr:`LODEEN (LOcal DEvelopment ENvironment)`, livrés sous forme de
machine virtuelle.

.. Note:: Python est avec C++ l'un des deux langages de programmation
   officiels d'Euclid.

.. rubric:: Liens:

- `Developers' Workshop #1
  <https://euclid.roe.ac.uk/projects/codeen-users/wiki/DevelopersWorkshop1>`_
  (nov. 2014)
- `Developers' Workshop #2
  <https://euclid.roe.ac.uk/projects/codeen-users/wiki/DevelopersWorkshop2>`_
  (oct. 2015)
- `C++ and Python Programming Sessions
  <https://euclid.roe.ac.uk/projects/codeen-users/wiki/C++PythonProgrammingSessions>`_
  (mai 2016)
- `Developers' Workshop #3
  <https://euclid.roe.ac.uk/projects/codeen-users/wiki/DevelopersWorkshop3>`_
  (oct. 2016)
- `Developers' Workshop #4
  <https://euclid.roe.ac.uk/projects/codeen-users/wiki/DevelopersWorkshop3>`_
  (**oct. 2017, Trieste**)

.. Warning:: certains liens de cette page requièrent un accès à l'`Euclid
   Redmine <https://euclid.roe.ac.uk/>`_.


Librairies EDEN
===============

`EDEN <https://euclid.roe.ac.uk/projects/codeen-users/wiki/EDEN>`_ est
un environnement contraint incluant un nombre très restreint de
bibliothèques Python.  La liste **exhaustive** pour EDEN v2.0
(automne 2017) est la suivante:

- pile numérique usuelle: `numpy`, `scipy` et `matplotlib`
- les bibliothèques spécialisées `pyFFTW
  <https://pypi.python.org/pypi/pyFFTW>`_ (*Fastest Fourier Transform
  in the West*) et `scikit-learn <http://scikit-learn.org/>`_
  (*machine learning*)
- entrées/sorties FITS: `fitsio <https://github.com/esheldon/fitsio>`_
- librairies astronomiques: `healpy
  <http://healpy.readthedocs.io/en/latest/>`_ (une interface à
  `HEALPix <http://healpix.sourceforge.net/>`_, pour l'analyse et la
  visualisation de données sur une sphère), `astropy
  <http://astropy.readthedocs.io/en/stable/>`_ et `pyEphem
  <http://rhodesmill.org/pyephem/>`_ (éphémérides)
- :abbr:`GUI (Graphical User Interface)`: `PyQt
  <https://riverbankcomputing.com/software/pyqt/intro>`_

.. Attention:: Dans le cadre du SGS, vous ne devez donc pas développer
   de code dépendant d'autres bibliothèques que celles-ci.

Toutefois, si une librairie absolument cruciale manque, il est
possible de demander son inclusion via une procédure de `Change
requests
<https://euclid.roe.ac.uk/projects/ct_change_process/wiki/Change_Requests>`_,
qui sera examinée et arbitrée par le :abbr:`CCB (Change Control
Board)`.

Git et GitLab
=============

Le développement du code est dorénavant géré par `git
<http://git-scm.com/>`_, et hebérgé par le `euclid-gitlab
<http://euclid-git.roe.ac.uk>`_.
