.. Time-stamp: <2012-02-20 23:39:51 ycopin>

=====================================================================
                     Correction des projets 2011
=====================================================================

Évaluation
==========

* Quel est l'objectif du programme/module? Est-il atteint?
* Comment l'améliorer? Pourquoi cela n'a-t-il pas déjà été fait?
* Python est-il le langage le plus approprié? Pourquoi?

Critères
--------

* Difficulté du sujet, et existence d'un modèle
* *Source Lines of Code* (hors commentaires et emprunts)
* Structure du programme (notamment utilisation de classes)
* Utilisation de librairies
* Documentations interne et externe
* Résultats (y compris précision, temps de calculs, pertinence, etc.)
* Modularité
* Zen du Python
* Oral

.. _resultats2011:

========  =========  ====  ====  ===  ===  =======  =======  ===  ===  ===  ====  ====
Étudiant  Sujet      Diff  SLOC  Str  Lib  Doc int  Doc ext  Rés  Mod  Zen  Oral  Note
========  =========  ====  ====  ===  ===  =======  =======  ===  ===  ===  ====  ====
**Première session**
--------------------------------------------------------------------------------------
Bergmann  Schröd.    |~|   327   |+|  |+|   |~|      |+|     |~|  |+|  |~|  |+|    13
Fabian    Potts      |+|   495   |-|  |-|   |~|      |+|     |+|  |~|  |-|  |+|    14
Mancuso   Coord //   |-|    82   |-|  |-|   |~|      |~|     |~|  |-|  |-|  |-|     8
*Giono*   Voronoi    |~|   180   |-|  |-|   |-|      |-|     |-|  |-|  |-|  |-|   **8**
Hangard   Diag. HR   |~|   121   |+|  |~|   |~|      |~|     |-|  |~|  |~|  |~|    10
Steen     Soliton    |~|   187   |-|  |+|   |~|      |~|     |~|  |~|  |~|  |~|    12     
Février   Agrégats   |+|   268   |+|  |+|   |+|      |~|     |+|  |+|  |+|  |+|    15
**Seconde session**
--------------------------------------------------------------------------------------
Giono     Voronoi                                                                  10
========  =========  ====  ====  ===  ===  =======  =======  ===  ===  ===  ====  ====

Outils d'analyse de code
========================

* `metrics <http://ionelmc.wordpress.com/2011/07/03/measure-your-code/>`_: SLOC vs. comments
* `doxygen` (documentation automatique)
* `construct_call_graph.py
  <http://blog.prashanthellina.com/2007/11/14/generating-call-graphs-for-understanding-and-refactoring-python-code/>`_
* `pycallgraph` (inutilisable en présence de librairies)


.. |+| image:: ../_static/smile.gif
   :alt: Bon
.. |~| image:: ../_static/err.gif
   :alt: Moyen
.. |-| image:: ../_static/frown.gif
   :alt: Faible
